{"version":3,"sources":["components/AddCategory.js","components/GigGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","document","querySelector","reset","htmlFor","className","placeholder","type","onChange","target","value","GigGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","key","GifExpertApp","categories","cat","ReactDOM","render","getElementById"],"mappings":"6MAuCgBA,EApCI,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAiBzC,OACI,oCACG,0BAAMC,SAZQ,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,IACdO,SAASC,cAAc,QAAQC,WAO3B,2BAAOC,QAAQ,YAAf,uBACA,2BACIC,UAAU,WACVC,YAAY,yBACZC,KAAK,OACLC,SAtBI,SAAEZ,GAClBF,EAAeE,EAAEa,OAAOC,aCLnBC,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKT,UAAU,QACX,yBAAKU,IAAMD,EAAME,IAAMH,IACvB,2BAAIA,K,uBCPHI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbL,EADa,0FAC6EM,UAAUF,GADvF,sBAGKG,MAAMP,GAHX,cAGbQ,EAHa,gBAIIA,EAAUC,OAJd,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QAVvB,kBAcZW,GAdY,4CAAH,sDCwBLK,EApBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECAN,SAAEA,GAAe,IAAD,EACd1B,mBAAS,CAC/BgC,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAuBxC,OAjBAC,qBAAU,WACNjB,EAASC,GACJiB,MAAK,SAAAV,GACFW,YAAW,WACPH,EAAU,CACNT,KAAMC,EACNM,SAAS,MAGd,UAGZ,CAAEb,IAKEc,EDrB2BK,CAAcnB,GAAlCU,EAFgB,EAEtBJ,KAAcO,EAFQ,EAERA,QAEtB,OACI,oCACI,4BAAKA,GAAW,uCAChB,4BAAMb,GACN,yBAAKb,UAAU,aACLuB,EAAOF,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,eACIW,IAAOX,EAAIf,IACNe,UEclBY,EA1BM,WAAM,MAEa/C,mBAAU,CAAC,SAFxB,mBAEhBgD,EAFgB,KAEJjD,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CACIA,cAAkBA,IAEtB,6BAEA,4BAEQiD,EAAWd,KAAI,SAAEe,GAAF,OACX,kBAAC,EAAD,CACIH,IAAMG,EACNvB,SAAYuB,UCdxCC,IAASC,OACL,kBAAC,EAAD,MACF1C,SAAS2C,eAAe,U","file":"static/js/main.92ade706.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue ,...cats] );\r\n            setInputValue('');\r\n            document.querySelector('form').reset();\r\n        }\r\n        \r\n    } \r\n    return ( \r\n        <> \r\n           <form onSubmit= { handleSubmit }>\r\n                <label htmlFor=\"inputCat\">Agregar Categoria: </label>\r\n                <input \r\n                    className=\"inputCat\" \r\n                    placeholder=\"Nombre de la categoria\" \r\n                    type=\"text\"\r\n                    onChange={ inputChange }\r\n                />\r\n           </form>\r\n        </>\r\n     );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n \r\n export default AddCategory;\r\n","import React from 'react'\r\n\r\nexport const GigGridItem = ({ id, title, url }) => {\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=diHFi3KsBLSjAx1Y44bwOR0V3ftvEfu7&q=${ encodeURI(category) }&limit=10`\r\n\r\n    const respuesta = await fetch(url)\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GigGridItem } from './GigGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    // Custom hook\r\n    const { data: images, loading } = useFetchGifs( category );\r\n    \r\n    return ( \r\n        <>\r\n            <h3>{loading && <p>Loading</p> }</h3>\r\n            <h3>{ category }</h3>\r\n            <div className=\"card-grid\">\r\n                    { images.map((img) => (\r\n                        <GigGridItem \r\n                            key= { img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))}\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then(gifs => {\r\n                setTimeout(() => {\r\n                    setState( {\r\n                        data: gifs,\r\n                        loading: false\r\n                    } );\r\n\r\n                }, 3000);\r\n                \r\n            });\r\n    }, [ category ]);\r\n    // Si la categoria cambia entonces vuelve a ejecutar el useEffect \r\n    \r\n\r\n    \r\n    return state; //{data: [], loading: true}\r\n\r\n}","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    // const categories = ['One Ponch', 'Dragon Ball'];\n    const [categories, setCategories] = useState( ['Goku'] );\n    \n    return (  \n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory \n                setCategories = { setCategories } \n            />\n            <hr/>\n            \n            <ol>\n                {\n                    categories.map(( cat ) => (\n                        <GifGrid \n                            key={ cat }\n                            category= { cat }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}